{
  "name": "alphafold",
  "description": "# Alphafold_v2.3.2 workflow\n\ninputs:\n - protein: protein sequence. For multimer separate chains with colon, e.g CAS:CAR.\n - run_name: a name for the run\n\nResults can be picked up in the Unity Catalog Volume:\n - protein_folding.alphafold.outputs\n",
  "email_notifications": {
    "on_failure": [
      "<email>"
    ],
    "on_duration_warning_threshold_exceeded": [
      "<email>"
    ],
    "no_alert_for_skipped_runs": true
  },
  "webhook_notifications": {},
  "notification_settings": {
    "no_alert_for_skipped_runs": true,
    "no_alert_for_canceled_runs": true
  },
  "timeout_seconds": 86400,
  "health": {
    "rules": [
      {
        "metric": "RUN_DURATION_SECONDS",
        "op": "GREATER_THAN",
        "value": 50400
      }
    ]
  },
  "max_concurrent_runs": 5,
  "tasks": [
    {
      "task_key": "featurize",
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "<full_path_to>/nb_run_af_featurize",
        "base_parameters": {
          "protein": "XXXX",
          "run_name": "run"
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "featurize_cluster",
      "timeout_seconds": 28800,
      "health": {
        "rules": [
          {
            "metric": "RUN_DURATION_SECONDS",
            "op": "GREATER_THAN",
            "value": 14400
          }
        ]
      },
      "email_notifications": {
        "on_failure": [
          "<email>"
        ],
        "on_duration_warning_threshold_exceeded": [
          "<email>"
        ]
      },
      "notification_settings": {
        "no_alert_for_skipped_runs": true,
        "no_alert_for_canceled_runs": true,
        "alert_on_last_attempt": true
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "fold",
      "depends_on": [
        {
          "task_key": "featurize"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "<full_path_to>/nb_run_af_fold",
        "base_parameters": {
          "protein": "XXXX",
          "run_name": "run"
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "fold_cluster",
      "timeout_seconds": 14400,
      "health": {
        "rules": [
          {
            "metric": "RUN_DURATION_SECONDS",
            "op": "GREATER_THAN",
            "value": 3600
          }
        ]
      },
      "email_notifications": {
        "on_failure": [
          "<email>"
        ],
        "on_duration_warning_threshold_exceeded": [
          "<email>"
        ]
      },
      "notification_settings": {
        "no_alert_for_skipped_runs": true,
        "no_alert_for_canceled_runs": true,
        "alert_on_last_attempt": true
      },
      "webhook_notifications": {}
    }
  ],
  "job_clusters": [
    {
      "job_cluster_key": "featurize_cluster",
      "new_cluster": {
        "cluster_name": "",
        "spark_version": "15.4.x-scala2.12",
        "spark_conf": {
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode"
        },
        "azure_attributes": {
          "first_on_demand": 1,
          "availability": "ON_DEMAND_AZURE",
          "spot_bid_max_price": -1
        },
        "node_type_id": "Standard_F8",
        "driver_node_type_id": "Standard_F8",
        "custom_tags": {
          "ResourceClass": "SingleNode",
          "work_type": "protein_folding"
        },
        "spark_env_vars": {
          "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
        },
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "STANDARD",
        "num_workers": 0
      }
    },
    {
      "job_cluster_key": "fold_cluster",
      "new_cluster": {
        "cluster_name": "",
        "spark_version": "15.4.x-gpu-ml-scala2.12",
        "spark_conf": {
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode"
        },
        "azure_attributes": {
          "first_on_demand": 1,
          "availability": "ON_DEMAND_AZURE",
          "spot_bid_max_price": -1
        },
        "node_type_id": "Standard_NC4as_T4_v3",
        "driver_node_type_id": "Standard_NC4as_T4_v3",
        "custom_tags": {
          "ResourceClass": "SingleNode",
          "work_type": "protein_folding"
        },
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "STANDARD",
        "num_workers": 0
      }
    }
  ],
  "tags": {
    "work_type": "protein_folding"
  },
  "queue": {
    "enabled": true
  },
  "parameters": [
    {
      "name": "protein",
      "default": "XXX"
    },
    {
      "name": "run_name",
      "default": "run"
    }
  ],
  "run_as": {
    "user_name": "<email>"
  }
}